<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.shortmessage.dao.ShortmessageMapper" >
  <resultMap id="BaseResultMap" type="com.hy.shortmessage.domain.Shortmessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="short_key" property="shortKey" jdbcType="VARCHAR" />
    <result column="original_url" property="originalUrl" jdbcType="VARCHAR" />
    <result column="biz" property="biz" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, short_key, original_url, biz, createtime, expire_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from shortmessage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByshortKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from shortmessage
    where short_key = #{shortKey,jdbcType=VARCHAR}
  </select>
  <select id="selectShortMessage" resultMap="BaseResultMap" parameterType="com.hy.shortmessage.domain.Shortmessage" >
    select 
    <include refid="Base_Column_List" />
    from shortmessage where 1=1

      <if test="biz != null" >
         and biz = #{biz,jdbcType=INTEGER}
      </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from shortmessage
    where id = #{id,jdbcType=BIGINT}
  </delete>


  <insert id="insert" parameterType="com.hy.shortmessage.domain.Shortmessage" >
    insert into shortmessage (id, short_key, original_url, 
      biz, createtime,
      expire_time)
    values (#{id,jdbcType=BIGINT}, #{shortKey,jdbcType=VARCHAR}, #{originalUrl,jdbcType=VARCHAR}, 
      #{biz,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
      #{expireTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertBatch" parameterType="com.hy.shortmessage.domain.Shortmessage">
    insert into shortmessage (id, short_key, original_url, biz,  createtime, expire_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id, jdbcType=BIGINT}, #{item.shortKey, jdbcType=VARCHAR}, #{item.originalUrl, jdbcType=VARCHAR},
      #{item.biz, jdbcType=INTEGER},  #{item.createtime,jdbcType=TIMESTAMP}, #{item.expireTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hy.shortmessage.domain.Shortmessage" >
    insert into shortmessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shortKey != null" >
        short_key,
      </if>
      <if test="originalUrl != null" >
        original_url,
      </if>
      <if test="biz != null" >
        biz,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shortKey != null" >
        #{shortKey,jdbcType=VARCHAR},
      </if>
      <if test="originalUrl != null" >
        #{originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="biz != null" >
        #{biz,jdbcType=INTEGER},
      </if>

      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.shortmessage.domain.Shortmessage" >
    update shortmessage
    <set >
      <if test="shortKey != null" >
        short_key = #{shortKey,jdbcType=VARCHAR},
      </if>
      <if test="originalUrl != null" >
        original_url = #{originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="biz != null" >
        biz = #{biz,jdbcType=INTEGER},
      </if>

      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.shortmessage.domain.Shortmessage" >
    update shortmessage
    set short_key = #{shortKey,jdbcType=VARCHAR},
      original_url = #{originalUrl,jdbcType=VARCHAR},
      biz = #{biz,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByOriginalUrl" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from shortmessage
    where original_url = #{originalUrl, jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByShortKey" parameterType="java.util.Map">
    delete from shortmessage where short_key = #{shortKey} and custid = #{custid}
  </delete>

  <delete id="deleteByShortKey2" parameterType="java.lang.String">
    delete from shortmessage where short_key = #{shortKey}
  </delete>


  <delete id="deleteByOriginalLike" parameterType="java.util.Map">
    delete from shortmessage where original_url like concat(concat('%',#{originalUrl}),'%') and custid = #{custid}
  </delete>
  
  <select id="selectByOriginalLike" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shortmessage where original_url like concat(concat('%',#{originalUrl}),'%')
  </select>
  <select id="selectShortmessageByOriginalUrl" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shortmessage where original_url = #{originalUrl}
  </select>

</mapper>